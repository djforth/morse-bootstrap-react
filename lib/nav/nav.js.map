{"version":3,"sources":["../../src/nav/nav.js"],"names":[],"mappings":";;;;;;;;;;;;AACA,IAAM,KAAK,GAAK,OAAO,CAAC,cAAc,CAAC,CAAC;AACxC,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;;AAG5B,IAAM,MAAM,GAAW,OAAO,CAAC,4BAA4B,CAAC,CAAC;AAC7D,IAAM,cAAc,GAAG,OAAO,CAAC,oCAAoC,CAAC,CAAC;;AAErE,IAAM,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;;AAGvC,IAAM,cAAc,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC;;;;IAInD,WAAW;YAAX,WAAW;;AACJ,WADP,WAAW,CACH,KAAK,EAAE;0BADf,WAAW;;AAEb,+BAFE,WAAW,6CAEP,KAAK,EAAE;AACb,QAAI,CAAC,KAAK,GAAG,EAAC,MAAM,EAAC,SAAS,EAAC,CAAC;GACjC;;eAJG,WAAW;;WAME,6BAAG;AAClB,UAAM,MAAM,GAAG,IAAI,cAAc,EAAE,CAAC;AACpC,UAAI,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;AAChC,UAAI,CAAC,IAAI,GAAI,MAAM,CAAC,UAAU,EAAE,CAAC;AACjC,UAAI,CAAC,QAAQ,CAAC;AACZ,cAAM,EAAC,MAAM;OACd,CAAC,CAAC;AACH,YAAM,CAAC,SAAS,CAAC,CAAA,UAAS,MAAM,EAAE,IAAI,EAAC;AACrC,YAAG,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,MAAM,EAAC;AAC9B,cAAI,CAAC,QAAQ,CAAC;AACZ,kBAAM,EAAC,MAAM;WACd,CAAC,CAAC;SACJ;;AAED,YAAI,CAAC,IAAI,GAAK,IAAI,CAAC;OAEpB,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACf;;;WAEG,gBAAG;AACL,aACE;;UAAG,IAAI,EAAC,GAAG,EAAC,KAAK,EAAC,YAAY;QAAE,IAAI,CAAC,KAAK,CAAC,KAAK;OAAK,CACrD;KACH;;;WAEK,kBAAG;AACP,aACG;AAAC,cAAM;UAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,AAAC,EAAC,YAAY,EAAE,CAAC,AAAC,EAAC,OAAO,MAAA;QACnD;AAAC,wBAAc;YAAC,QAAQ,EAAE,CAAC,AAAC,EAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,AAAC;UACxD,oBAAC,QAAQ,eAAK,IAAI,CAAC,KAAK,IAAG,GAAG,EAAC,UAAU,EAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,AAAC,IAAG;SACxD;OACV,CACT;KACH;;;SAvCG,WAAW;GAAS,KAAK,CAAC,SAAS;;AA0CzC,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC","file":"nav.js","sourcesContent":["\nconst React   = require(\"react/addons\");\nconst _ = require(\"lodash\");\n\n// React-bootstrap: http://react-bootstrap.github.io/\nconst Navbar         = require(\"react-bootstrap/lib/Navbar\");\nconst CollapsibleNav = require(\"react-bootstrap/lib/CollapsibleNav\");\n\nconst Navitems = require(\"./navitems\");\n\n// Morse Libraies\nconst ViewportDetect = require(\"viewport-detection-es6\");\n\n// console.log(\"WTF<<<<<<<<<<<\")\n\nclass NavDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {device:\"desktop\"};\n  }\n\n  componentDidMount() {\n    const detect = new ViewportDetect();\n    let device = detect.getDevice();\n    this.size  = detect.windowSize();\n    this.setState({\n      device:device\n    });\n    detect.trackSize(function(device, size){\n      if(this.state.device !== device){\n        this.setState({\n          device:device\n        });\n      }\n\n      this.size   = size;\n\n    }.bind(this));\n  }\n\n  link() {\n    return (\n      <a href=\"/\" title=\"Go to Home\">{this.props.title}</a>\n    );\n  }\n\n  render() {\n    return (\n       <Navbar brand={this.link()} toggleNavKey={0} inverse  >\n        <CollapsibleNav eventKey={0} key={_.uniqueId(\"collapsed\")}>\n          <Navitems {...this.props}  key=\"navitems\" device={this.state.device} />\n        </CollapsibleNav>\n      </Navbar>\n    );\n  }\n}\n\nmodule.exports = NavDropdown;\n"]}