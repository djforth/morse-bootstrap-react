{"version":3,"sources":["../../src/nav/dropdown.js"],"names":[],"mappings":";;;;;;;;;;AACA,IAAM,KAAK,GAAK,OAAO,CAAC,cAAc,CAAC,CAAC;AACxC,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAG5B,IAAM,UAAU,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;AACpD,IAAM,SAAS,GAAI,OAAO,CAAC,sBAAsB,CAAC,CAAC;;;;AAInD,IAAI,cAAc,GAAG,OAAO,CAAC,oCAAoC,CAAC,CAAC;AACnE,IAAI,QAAQ,GAAS,OAAO,CAAC,8BAA8B,CAAC,CAAC;;IAEvD,QAAQ;YAAR,QAAQ;;AACD,WADP,QAAQ,CACA,KAAK,EAAE;0BADf,QAAQ;;AAEV,+BAFE,QAAQ,6CAEJ,KAAK,EAAE;GACd;;eAHG,QAAQ;;WAKG,2BAAE;AACf,UAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,UAAS,EAAE,EAAC;AAClD,YAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAC;AACpB,iBAAQ,oBAAC,QAAQ,IAAC,OAAO,MAAA,GAAE,CAAE;SAC9B,MAAM;AACL,iBAAQ;AAAC,oBAAQ;cAAC,IAAI,EAAE,EAAE,CAAC,IAAI,AAAC,EAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,AAAC;YAAE,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;WAAY,CAAE;SAClG;OAEF,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACd,aAAO,QAAQ,CAAC;KACjB;;;WAEK,kBAAG;AACP,aACI;AAAC,sBAAc;UAAC,OAAO,EAAE,IAAI,AAAC,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,AAAC,EAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE,AAAC,EAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,AAAC;QACpG,IAAI,CAAC,eAAe,EAAE;OACR,CACnB;KACH;;;SAvBG,QAAQ;GAAS,KAAK,CAAC,SAAS;;AA0BtC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;AAC9C,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;;AAE7C,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC","file":"dropdown.js","sourcesContent":["\nconst React   = require(\"react/addons\");\nconst _ = require(\"lodash\");\n\n\nconst iconMixins = require(\"../mixins/icon_mixins\");\nconst navMixins  = require(\"../mixins/nav_mixins\");\n\n// React-bootstrap: http://react-bootstrap.github.io/\n// const bootstrap  = require(\"react-bootstrap\");\nlet DropdownButton = require(\"react-bootstrap/lib/DropdownButton\");\nlet MenuItem       = require(\"react-bootstrap/lib/MenuItem\");\n\nclass DropDown extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderMenuItems(){\n    let menulist = this.props.menuitems.map(function(mi){\n      if(mi.options.divider){\n        return (<MenuItem divider/>);\n      } else {\n        return (<MenuItem href={mi.path} key={_.uniqueId(\"menuitem\")}>{this.createTitle(mi)}</MenuItem>);\n      }\n\n    }.bind(this));\n    return menulist;\n  }\n\n  render() {\n    return (\n        <DropdownButton navItem={true} title={this.props.title} key={_.uniqueId()} noCaret={this.props.noCaret}>\n          {this.renderMenuItems()}\n        </DropdownButton>\n    );\n  }\n}\n\nObject.assign(DropDown.prototype, iconMixins);\nObject.assign(DropDown.prototype, navMixins);\n\nmodule.exports = DropDown;\n"]}